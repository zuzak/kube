apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: authentik
  namespace: argocd
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: authentik
  project: identity
  source:
    path: charts/authentik
    repoURL: https://github.com/goauthentik/helm.git
    targetRevision: HEAD
    helm:
      valuesObject:
        authentik:
          postgresql:
            password: file:///pgcreds/postgres-password
        worker:
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
          volumes:
            - name: pgcreds
              secret:
                secretName: authentik-postgresql
          volumeMounts:
            - name: pgcreds
              mountPath: /pgcreds
              readOnly: true
        server:
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
          ingress:
            enabled: true
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-staging"
            ingressClassName: nginx
            hosts:
              - authentik.k3s.fluv.net
            tls:
              - secretName: authentik-tls
                hosts:
                  - authentik.k3s.fluv.net
          volumes:
            - name: pgcreds
              secret:
                secretName: authentik-postgresql
          volumeMounts:
            - name: pgcreds
              mountPath: /pgcreds
              readOnly: true
        postgresql:
          enabled: true
          persistence:
            enabled: true
            storageClass: longhorn
            accessModes:
              - ReadWriteOnce
        redis:
          enabled: true
